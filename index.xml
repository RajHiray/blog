<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raj Hiray Blog</title>
    <link>https://rajhiray.github.io/</link>
    <description>Recent content on Raj Hiray Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jan 2021 17:12:30 +0530</lastBuildDate><atom:link href="https://rajhiray.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Managed Identity Implementation of Azure Key Vault</title>
      <link>https://rajhiray.github.io/post/azure-key-vault-managed-identity/</link>
      <pubDate>Sun, 03 Jan 2021 17:12:30 +0530</pubDate>
      
      <guid>https://rajhiray.github.io/post/azure-key-vault-managed-identity/</guid>
      <description>With any key/password store I always thought that the weak link was the credentials used to access it. If that single point of failure was compromised then all your secrets would be vulnerable. Microsoft have overcome this by creating the Managed Identity. A Managed Identity is generated by a resource within Azure and can be configured to access resources that use Azure AD for authentication.
Managed Identity Managed identities for Azure resources is a feature of the Azure Active Directory.</description>
    </item>
    
    <item>
      <title>Azure Key Vault Fundamentals</title>
      <link>https://rajhiray.github.io/post/azure-key-vault/</link>
      <pubDate>Sun, 27 Dec 2020 17:33:56 +0530</pubDate>
      
      <guid>https://rajhiray.github.io/post/azure-key-vault/</guid>
      <description>You’ve probably heard some version of the story about a developer who mistakenly checked in his key/secrete to source code.
As developers we all understand and care about keeping dev and production secrets safe but managing those secrets on your own or especially in a team can be cumbersome.
Safeguarding Secrets In software Development Most of us know it’s a best practice to keep secret settings like connection strings, domain passwords, or other credentials as a runtime configuration and outside the source code.</description>
    </item>
    
    <item>
      <title>Configure global .gitignore</title>
      <link>https://rajhiray.github.io/post/configure-global-gitignore/</link>
      <pubDate>Sun, 06 Dec 2020 16:39:59 +0530</pubDate>
      
      <guid>https://rajhiray.github.io/post/configure-global-gitignore/</guid>
      <description>How do you treat files you don’t want to include in your commit?
Write it in .gitignore, isn’t it?
How you treat files you want to ignore in every git repository? always put file name in .gitignore?
For example you are using Visual Studio 2019 IDE, VS19 will create .vs folder in your project folder. you always ignore these files in every single project you’re working on by configuring in project level or repository level .</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://rajhiray.github.io/projects/</link>
      <pubDate>Sun, 06 Dec 2020 15:31:31 +0530</pubDate>
      
      <guid>https://rajhiray.github.io/projects/</guid>
      <description>PROJECTS </description>
    </item>
    
    <item>
      <title>Public speaking</title>
      <link>https://rajhiray.github.io/public-speaking/</link>
      <pubDate>Sun, 06 Dec 2020 15:31:31 +0530</pubDate>
      
      <guid>https://rajhiray.github.io/public-speaking/</guid>
      <description>PUBLIC SPEAKING </description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://rajhiray.github.io/about/</link>
      <pubDate>Sat, 28 Nov 2020 19:59:11 +0200</pubDate>
      
      <guid>https://rajhiray.github.io/about/</guid>
      <description>.avatar{float: left;margin: 0 15px 15px 0;width: 30%;}.certificats{table-layout: fixed;width:100%;margin: 20px 0px;}.certificats td{vertical-align:top;}#contact{font-size: 6em;text-align: center;}I&amp;rsquo;m a passionate software developer with over 3 years of professional experience. Love to code and design algorithms for real world problems.  I’ve been working on technologies like C#,.NET Core, REST API, Windows Services, MS SQL Server, Kusto, SSIS and ADF ETL, Power Automate, Power App, Power BI.</description>
    </item>
    
  </channel>
</rss>
